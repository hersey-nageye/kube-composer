name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm destruction of all infrastructure'
        required: true
        type: string

permissions:
  contents: read
  actions: read

env:
  AWS_REGION: eu-west-2
  AWS_DEFAULT_REGION: eu-west-2
  TF_VERSION: 1.11.2

concurrency:
  group: tf-destroy-${{ github.ref }}
  cancel-in-progress: false   # never auto-cancel a destroy

jobs:
  terraform-destroy:
    name: Destroy Terraform Infrastructure
    runs-on: ubuntu-latest
    environment: production   # approval gate recommended
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate confirmation
        run: |
          if [ "${{ inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "You must type 'DESTROY' exactly."; exit 1; fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Optional but helpful when using S3 lockfiles
      - name: Clear stale S3 lockfile (if any)
        run: |
          aws s3api head-object \
            --bucket "${{ secrets.TF_STATE_BUCKET }}" \
            --key "${{ secrets.TF_STATE_KEY }}.tflock" \
            --region "${{ env.AWS_REGION }}" >/dev/null 2>&1 && \
          aws s3 rm "s3://${{ secrets.TF_STATE_BUCKET }}/${{ secrets.TF_STATE_KEY }}.tflock" \
            --region "${{ env.AWS_REGION }}" || true

      - name: Terraform Init
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ env.AWS_REGION }}"

      # Optional: show what would be destroyed
      - name: Terraform Plan (destroy)
        run: |
          terraform plan -destroy -input=false -lock-timeout=5m -no-color -out=tfplan.destroy || true
          terraform show -no-color tfplan.destroy | head -200

      - name: Terraform Destroy
        run: |
          echo "Destroying infrastructure..."
          terraform destroy -input=false -lock-timeout=5m -auto-approve
          echo "Terraform destroy completed successfully!"

      - name: Destroy Summary
        if: always()
        run: |
          {
            echo "## Destroy Results";
            echo "- Job status: ${{ job.status }}";
          } >> $GITHUB_STEP_SUMMARY
